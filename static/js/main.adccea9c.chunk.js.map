{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTabId","onTabSelected","selectedTab","find","tab","id","_jsxs","children","_jsx","className","map","title","classNames","href","concat","onClick","handleSelectTab","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAHC,GAI3B,IAHLC,EAAID,EAAJC,KACAC,EAAaF,EAAbE,cACAC,EAAaH,EAAbG,cAEMC,EAAcH,EAAKI,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOL,MAAkBD,EAAK,GAQvE,OACEO,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SACGR,EAAKW,KAAI,SAAAN,GACR,IAAQC,EAAcD,EAAdC,GAAIM,EAAUP,EAAVO,MAEZ,OACEH,cAAA,MACEC,UAAWG,IACT,CACE,YAAaR,EAAIC,KAAOH,EAAYG,KAGxC,UAAQ,MAAKE,SAGbC,cAAA,KACEK,KAAI,IAAAC,OAAMV,EAAIC,IACd,UAAQ,UACRU,QAAS,kBA1BD,SAACX,GACnBA,EAAIC,KAAOL,GACbC,EAAcG,GAwBaY,CAAgBZ,IAAKG,SAEnCI,KAPEN,UAefG,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACxCL,EAAYe,cC9CRlB,EAAc,CACzB,CAAEM,GAAI,QAASM,MAAO,QAASM,QAAS,eACxC,CAAEZ,GAAI,QAASM,MAAO,QAASM,QAAS,eACxC,CAAEZ,GAAI,QAASM,MAAO,QAASM,QAAS,gBAG7BC,EAAgB,WAC3B,IAAAC,EAAsCC,mBAASrB,EAAK,IAAGsB,EAAAC,YAAAH,EAAA,GAAhDjB,EAAWmB,EAAA,GAAEE,EAAcF,EAAA,GAElC,OACEf,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAO,OACY,OAAXZ,QAAW,IAAXA,OAAW,EAAXA,EAAaS,SAGnCH,cAACX,EAAI,CACHE,KAAMA,EACNC,cAAeE,EAAYG,GAC3BJ,cAAesB,QCtBvBC,IAASC,OAAOjB,cAACU,EAAG,IAAKQ,SAASC,eAAe,W","file":"static/js/main.adccea9c.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { Tab } from '../../types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId,\n  onTabSelected,\n}) => {\n  const selectedTab = tabs.find(tab => tab.id === selectedTabId) || tabs[0];\n\n  const handleSelectTab = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                className={classNames(\n                  {\n                    'is-active': tab.id === selectedTab.id,\n                  },\n                )}\n                data-cy=\"Tab\"\n                key={id}\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => handleSelectTab(tab)}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/Tab';\nimport { Tabs } from './components/Tabs';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab?.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        onTabSelected={setSelectedTab}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}